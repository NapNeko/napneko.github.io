import{_ as o,C as n,c as r,o as k,j as i,G as t,ar as e,a as s,w as d}from"./chunks/framework.DwOsETNj.js";const m=JSON.parse('{"title":"BootWay03 (半自动) 教程","description":"","frontmatter":{},"headers":[],"relativePath":"guide/boot/Shell-Linux-SemiAuto.md","filePath":"guide/boot/Shell-Linux-SemiAuto.md","lastUpdated":1760449608000}'),c={name:"guide/boot/Shell-Linux-SemiAuto.md"};function u(g,a,F,b,y,C){const p=n("NolebasePageProperties"),l=n("VPNolebaseInlineLinkPreview"),h=n("NolebaseGitChangelog");return k(),r("div",null,[a[5]||(a[5]=i("h1",{id:"bootway03-半自动-教程",tabindex:"-1"},[s("BootWay03 (半自动) 教程 "),i("a",{class:"header-anchor",href:"#bootway03-半自动-教程","aria-label":'Permalink to "BootWay03 (半自动) 教程"'},"​")],-1)),t(p),a[6]||(a[6]=e('<h2 id="安装教程" tabindex="-1">安装教程 <a class="header-anchor" href="#安装教程" aria-label="Permalink to &quot;安装教程&quot;">​</a></h2><h3 id="_1-安装-qq-和其他依赖" tabindex="-1">1. 安装 QQ 和其他依赖 <a class="header-anchor" href="#_1-安装-qq-和其他依赖" aria-label="Permalink to &quot;1. 安装 QQ 和其他依赖&quot;">​</a></h3><p>你需要安装 28060+ 版本的 QQ 和<code>xvfb</code>以及<code>xauth</code>，后两者安装方法为</p><ul><li>Debian 系（Debian、Ubuntu 等）： <code>sudo apt install xvfb xauth</code></li><li>Redhat 系（Fedora、CentOS Stream 等）： <code>sudo dnf install xorg-x11-server-Xvfb xorg-x11-xauth</code></li><li>Arch 系： <code>sudo pacman -S xorg-server-xvfb</code></li></ul><details><summary>Redhat系的备注</summary><p>对于RHEL 10+、CentOS Stream 10+以及其他基于此的发行版，X11服务器在这些系统中已经被<b>完全移除</b>，在这种情况下无法通过xvfb实现无头运行。目前没有其他已知方案。</p><p>AlmaLinux10是一个例外。如果你真的很想使用类CentOS发行版，请考虑AlmaLinux。</p></details>',5)),i("p",null,[a[1]||(a[1]=s("其他发行版可以参考",-1)),t(l,{href:"https://pkgs.org/search/?q=xvfb",target:"_blank",rel:"noreferrer"},{default:d(()=>[...a[0]||(a[0]=[s("这个页面",-1)])]),_:1}),a[2]||(a[2]=s("自行选择合适的包安装，确保安装后 ",-1)),a[3]||(a[3]=i("code",null,"xvfb-run",-1)),a[4]||(a[4]=s(" 命令存在",-1))]),a[7]||(a[7]=e(`<h3 id="_2-挂载启动" tabindex="-1">2. 挂载启动 <a class="header-anchor" href="#_2-挂载启动" aria-label="Permalink to &quot;2. 挂载启动&quot;">​</a></h3><p>执行命令</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;const fs = require(&quot;fs&quot;);</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">const path = require(&quot;path&quot;);</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">const CurrentPath = path.dirname(__filename);</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">const hasNapcatParam = process.argv.includes(&quot;--no-sandbox&quot;);</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">if (hasNapcatParam) {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    (async () =&gt; {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        await import(&quot;file://&quot; + path.join(CurrentPath, &quot;./napcat/napcat.mjs&quot;));</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        // await import(&quot;file://&quot; + &quot;/path/to/napcat/napcat.mjs&quot;);</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        // 需要修改napcat的用户，在&quot;/path/to/napcat&quot;段写自己的napcat文件夹位置，并注释path.join所在行</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    })();</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">} else {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    require(&quot;./application/app_launcher/index.js&quot;);</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    setTimeout(() =&gt; {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        global.launcher.installPathPkgJson.main = &quot;./application.asar/app_launcher/index.js&quot;;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    }, 0);</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /opt/QQ/resources/app/loadNapCat.cjs</span></span></code></pre></div><p>如果你使用 LiteloaderQQNT，那么执行：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;const fs = require(&quot;fs&quot;);</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">const path = require(&quot;path&quot;);</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">const CurrentPath = path.dirname(__filename);</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">const hasNapcatParam = process.argv.includes(&quot;--no-sandbox&quot;);</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">if (hasNapcatParam) {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    (async () =&gt; {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        await import(&quot;file://&quot; + path.join(CurrentPath, &quot;./napcat/napcat.mjs&quot;));</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        // await import(&quot;file:///path/to/napcat/napcat.mjs&quot;);</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        // 需要修改napcat的用户，在&quot;/path/to/napcat&quot;段写自己的napcat文件夹位置，并注释path.join所在行</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    })();</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">} else {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    require(String.raw\`/opt/LiteLoaderQQNT\`);  //引号中写入你的liteloaderqqnt路径</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /opt/QQ/resources/app/loadNapCat.cjs</span></span></code></pre></div><h3 id="_3-安装-napcat" tabindex="-1">3. 安装 napcat <a class="header-anchor" href="#_3-安装-napcat" aria-label="Permalink to &quot;3. 安装 napcat&quot;">​</a></h3><p>安装 napcat.shell 到 <code>/opt/QQ/resources/app/napcat</code> 确保 <code>/opt/QQ/resources/app/napcat/napcat.mjs</code> 存在</p><h3 id="_4-修补-package-json" tabindex="-1">4. 修补 package.json <a class="header-anchor" href="#_4-修补-package-json" aria-label="Permalink to &quot;4. 修补 package.json&quot;">​</a></h3><p>修改 <code>/opt/QQ/resources/app/package.json</code> 的 <code>main</code> 属性从 <code>./application/app_launcher/index.js</code> 改为 <code>./loadNapCat.cjs</code>（注意：自 QQ 29927 版本左右起 main 属性内容有所变化，找到相似 main 属性直接改即可）</p><p>这步也可以使用下面替代</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +777</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /opt/QQ</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sed</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;s/&quot;main&quot;: &quot;.*\\/index.js&quot;/&quot;main&quot;: &quot;.\\/loadNapCat.cjs&quot;/&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /opt/QQ/resources/app/package.json</span></span></code></pre></div><h3 id="_5-启动" tabindex="-1">5.启动 <a class="header-anchor" href="#_5-启动" aria-label="Permalink to &quot;5.启动&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xvfb-run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> qq</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-sandbox</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">-q</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [快速登录的qq号]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><h3 id="_6-可选-自动启动" tabindex="-1">6.（可选）自动启动 <a class="header-anchor" href="#_6-可选-自动启动" aria-label="Permalink to &quot;6.（可选）自动启动&quot;">​</a></h3><p>在安装后，可以使用systemd等工具自动启动napcat。下面是一个systemd服务的示例。</p><div class="language-service vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">service</span><pre class="shiki shiki-themes github-light github-dark vp-code" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0"><code><span class="line"><span>[Unit]</span></span>
<span class="line"><span>Description=Napcat QQ Server</span></span>
<span class="line"><span>Documentation=https://napneko.github.io/guide</span></span>
<span class="line"><span>After=network.target</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[Service]</span></span>
<span class="line"><span>User=&lt;要使用的用户&gt;</span></span>
<span class="line"><span>Restart=on-failure</span></span>
<span class="line"><span>WorkingDirectory=&lt;建议使用该用户的home目录位置&gt;</span></span>
<span class="line"><span>ExecStart=/usr/bin/xvfb-run -a qq --no-sandbox &lt;-q [快速登录的qq号]&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[Install]</span></span>
<span class="line"><span>WantedBy=multi-user.target</span></span></code></pre></div><p>将上面的内容写入<code>/etc/systemd/system/napcat.service</code>，然后使用<code>sudo systemctl enable napcat.service --now</code>命令即可启动并配置服务自启。</p><p><strong>请注意：即使配置了系统服务，在未配置快速登录或快速登录失败时一样要手动扫码。</strong></p>`,18)),t(h)])}const f=o(c,[["render",u]]);export{m as __pageData,f as default};
