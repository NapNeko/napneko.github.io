import{_ as d,C as i,c as b,o as u,j as o,G as r,ar as s,a as e,w as l}from"./chunks/framework.DwOsETNj.js";const f="/assets/use/koishi-install-onebot.png",g="/assets/use/koishi-onebot-go-setting.png",m="/assets/use/koishi-onebot-setting.png",k="/assets/use/Astrbot-onebot-1.png",N="/assets/use/Astrbot-onebot-2.png",L=JSON.parse('{"title":"接入框架","description":"","frontmatter":{},"headers":[],"relativePath":"use/integration.md","filePath":"use/integration.md","lastUpdated":1756449723000}'),v={name:"use/integration.md"},C={id:"nonebot",tabindex:"-1"},P={id:"koishi",tabindex:"-1"},T={id:"astrbot",tabindex:"-1"},S={id:"onebotv11-rs",tabindex:"-1"},B={id:"node-napcat-ts",tabindex:"-1"},x={id:"atri",tabindex:"-1"},A={id:"kovi",tabindex:"-1"},w={id:"mirai",tabindex:"-1"},O={id:"ncatbot",tabindex:"-1"};function h(I,t,W,V,M,K){const a=i("NolebasePageProperties"),n=i("VPNolebaseInlineLinkPreview"),p=i("NolebaseGitChangelog");return u(),b("div",null,[t[53]||(t[53]=o("h1",{id:"接入框架",tabindex:"-1"},[e("接入框架 "),o("a",{class:"header-anchor",href:"#接入框架","aria-label":'Permalink to "接入框架"'},"​")],-1)),r(a),o("h2",C,[r(n,{href:"https://nonebot.dev/docs/",target:"_blank",rel:"noreferrer"},{default:l(()=>[...t[0]||(t[0]=[e("NoneBot",-1)])]),_:1}),t[1]||(t[1]=e()),t[2]||(t[2]=o("a",{class:"header-anchor",href:"#nonebot","aria-label":'Permalink to "[NoneBot](https://nonebot.dev/docs/)"'},"​",-1))]),t[54]||(t[54]=s("<ol><li><p>配置 NoneBot</p><p>这里假设你已经安装了 OneBot 适配器</p><p>默认情况下，NoneBot 是启用了反向 WS 的，如果出现 403，可能是默认配置问题，需要配置 <code>token</code> 才能正常连接。</p><p>具体方法为：修改 NoneBot 配置文件 <code>.env</code>，添加 <code>ONEBOT_ACCESS_TOKEN=你在 NapCat 中配置的 token</code>。</p><p>然后，启动 NoneBot，可以看到 NoneBot 输出的端口号，如 <code>8080</code>。</p></li><li><p>配置 NapCat</p><p>在 NapCat 配置添加反向 WS 地址，地址为 <code>ws://127.0.0.1:8080/onebot/v11/ws</code>, 这里的 <code>8080</code> 是 NoneBot 输出的端口号，<code>/onebot/v11/ws</code> 是 NoneBot onebot 适配器默认的路径。</p></li></ol>",1)),o("h2",P,[r(n,{href:"https://koishi.chat",target:"_blank",rel:"noreferrer"},{default:l(()=>[...t[3]||(t[3]=[e("Koishi",-1)])]),_:1}),t[4]||(t[4]=e()),t[5]||(t[5]=o("a",{class:"header-anchor",href:"#koishi","aria-label":'Permalink to "[Koishi](https://koishi.chat)"'},"​",-1))]),t[55]||(t[55]=s('<ol><li><p>在 Koishi 插件市场搜索 <code>onebot</code> 并安装 <code>adapter-onebot</code>，如下图：</p><p><img src="'+f+'" alt="koishi-install-onebot"></p></li><li><p>安装完之后，点击修改 → 配置</p><p><img src="'+g+'" alt="koishi-onebot-go-setting"></p></li><li><p>配置 OneBot</p><p>这里以 WS 反向连接为例：</p><ul><li><code>selfId</code> 为你的机器人的 QQ 号</li><li><code>token</code> 需和 NapCat 配置的 <code>token</code> 一致，当然，如果没有配置 token，则留空。</li><li><code>protocol</code> 选择 ws-reverse</li></ul><p>其他配置保持默认即可，点击保存，然后启用插件。</p><p><img src="'+m+'" alt="koishi-onebot-setting"></p><p>配置完成后，在 NapCat 的配置中添加 WS 反向地址。Koishi OneBot 的 WS 反向地址为 <code>ws://127.0.0.1:5140/onebot</code>。添加完成后，点击保存即可。</p></li></ol>',1)),o("h2",T,[r(n,{href:"https://astrbot.app/",target:"_blank",rel:"noreferrer"},{default:l(()=>[...t[6]||(t[6]=[e("AstrBot",-1)])]),_:1}),t[7]||(t[7]=e()),t[8]||(t[8]=o("a",{class:"header-anchor",href:"#astrbot","aria-label":'Permalink to "[AstrBot](https://astrbot.app/)"'},"​",-1))]),t[56]||(t[56]=s('<ol><li><p>配置 AstrBot</p><p>选择 配置 → 消息平台 → 消息平台适配器 → aiocqhttp(qq)，默认即可，可根据需要更改。</p><p><img src="'+k+'" alt="AstrBot-onebot-1"></p></li><li><p>配置 OneBot</p><p>在 NapCat WebUI 页面选择 网络配置 → 新建 → WebSocket 客户端，URL 填入<code>ws://127.0.0.1:6199/ws</code>，添加完成后，点击保存即可。 <img src="'+N+'" alt="AstrBot-onebot-2"></p></li></ol><h2 id="olivos" tabindex="-1">OlivOS <a class="header-anchor" href="#olivos" aria-label="Permalink to &quot;OlivOS&quot;">​</a></h2>',2)),o("p",null,[t[10]||(t[10]=e("支持正向和反向 WS 以及 http 详见 ",-1)),r(n,{href:"https://doc.olivos.wiki/",target:"_blank",rel:"noreferrer"},{default:l(()=>[...t[9]||(t[9]=[e("文档",-1)])]),_:1})]),o("h2",S,[r(n,{href:"https://github.com/canxin121/onebotv11_rs",target:"_blank",rel:"noreferrer"},{default:l(()=>[...t[11]||(t[11]=[e("onebotv11_rs",-1)])]),_:1}),t[12]||(t[12]=e()),t[13]||(t[13]=o("a",{class:"header-anchor",href:"#onebotv11-rs","aria-label":'Permalink to "[onebotv11_rs](https://github.com/canxin121/onebotv11_rs)"'},"​",-1))]),t[57]||(t[57]=o("p",null,"支持正向和反向 WS 以及 http",-1)),o("h2",B,[r(n,{href:"https://github.com/HkTeamX/node-napcat-ts",target:"_blank",rel:"noreferrer"},{default:l(()=>[...t[14]||(t[14]=[e("node-napcat-ts",-1)])]),_:1}),t[15]||(t[15]=e()),t[16]||(t[16]=o("a",{class:"header-anchor",href:"#node-napcat-ts","aria-label":'Permalink to "[node-napcat-ts](https://github.com/HkTeamX/node-napcat-ts)"'},"​",-1))]),o("ol",null,[t[21]||(t[21]=o("li",null,[o("p",null,"配置 NapCat"),o("p",null,"在 NapCat 配置启用正向 WS")],-1)),o("li",null,[t[18]||(t[18]=o("p",null,"配置 node-napcat-ts",-1)),o("p",null,[r(n,{href:"https://node-napcat-ts.huankong.top/guide/getting-started",target:"_blank",rel:"noreferrer"},{default:l(()=>[...t[17]||(t[17]=[e("详见 node-napcat-ts 文档",-1)])]),_:1})]),t[19]||(t[19]=o("p",null,"如果出现连接失败，可能是配置问题，需要配置 token 才能正常连接。",-1)),t[20]||(t[20]=o("p",null,[e("详见 "),o("code",null,"socket.error"),e(" 等事件")],-1))])]),o("h2",x,[r(n,{href:"https://github.com/HkTeamX/ATRI",target:"_blank",rel:"noreferrer"},{default:l(()=>[...t[22]||(t[22]=[e("ATRI",-1)])]),_:1}),t[23]||(t[23]=e()),t[24]||(t[24]=o("a",{class:"header-anchor",href:"#atri","aria-label":'Permalink to "[ATRI](https://github.com/HkTeamX/ATRI)"'},"​",-1))]),o("p",null,[t[26]||(t[26]=e("详见 ",-1)),r(n,{href:"https://atri.huankong.top/",target:"_blank",rel:"noreferrer"},{default:l(()=>[...t[25]||(t[25]=[e("文档",-1)])]),_:1})]),o("h2",A,[r(n,{href:"https://github.com/ThriceCola/Kovi",target:"_blank",rel:"noreferrer"},{default:l(()=>[...t[27]||(t[27]=[e("Kovi",-1)])]),_:1}),t[28]||(t[28]=e()),t[29]||(t[29]=o("a",{class:"header-anchor",href:"#kovi","aria-label":'Permalink to "[Kovi](https://github.com/ThriceCola/Kovi)"'},"​",-1))]),t[58]||(t[58]=o("p",null,"Rust Onebot V11 插件框架。",-1)),t[59]||(t[59]=o("p",null,"将 NapCat 配置启用正向 WS。",-1)),o("p",null,[t[31]||(t[31]=e("编写插件或使用社区插件，编译启动即可。（",-1)),r(n,{href:"https://thricecola.github.io/kovi-doc",target:"_blank",rel:"noreferrer"},{default:l(()=>[...t[30]||(t[30]=[e("文档",-1)])]),_:1}),t[32]||(t[32]=e("里面非常详细哦）",-1))]),o("p",null,[t[34]||(t[34]=e("编写插件可使用 ",-1)),r(n,{href:"https://crates.io/crates/kovi-plugin-expand-napcat",target:"_blank",rel:"noreferrer"},{default:l(()=>[...t[33]||(t[33]=[e("NapCat Api 拓展",-1)])]),_:1}),t[35]||(t[35]=e(" 。",-1))]),o("h2",w,[r(n,{href:"https://github.com/mamoe/mirai",target:"_blank",rel:"noreferrer"},{default:l(()=>[...t[36]||(t[36]=[e("Mirai",-1)])]),_:1}),t[37]||(t[37]=e()),t[38]||(t[38]=o("a",{class:"header-anchor",href:"#mirai","aria-label":'Permalink to "[Mirai](https://github.com/mamoe/mirai)"'},"​",-1))]),o("p",null,[t[40]||(t[40]=e("可通过 ",-1)),r(n,{href:"https://github.com/MrXiaoM/Overflow",target:"_blank",rel:"noreferrer"},{default:l(()=>[...t[39]||(t[39]=[e("Overflow",-1)])]),_:1}),t[41]||(t[41]=e(" 对接 Mirai 框架，以快速方便的实现 Mirai 插件从 MCL 启动方式无缝切换到 NapCat 继续使用。",-1))]),o("ol",null,[t[45]||(t[45]=o("li",null,[o("p",null,"配置 NapCat"),o("p",null,"按照 NapCat 相关文档下载并部署 NapCat，启动 NapCat (推荐使用控制台启动)并扫码登录 Bot，打开控制台输出的 WebUI 网址，使用默认 token 登录 WebUI 并配置和启用 WS（推荐将 NapCat 作为服务器端）。")],-1)),o("li",null,[t[43]||(t[43]=o("p",null,"配置 Overflow",-1)),o("p",null,[r(n,{href:"https://mirai.mrxiaom.top/",target:"_blank",rel:"noreferrer"},{default:l(()=>[...t[42]||(t[42]=[e("详见 Overflow 文档",-1)])]),_:1})]),t[44]||(t[44]=o("p",null,"根据文档指引安装 Overflow，将在 NapCat 的 WebUI 中配置的 WS 相关信息填写到 overflow.json 中（推荐使用正向 WS，将 Overflow 当作是客户端），注意信息填写一致。",-1))]),t[46]||(t[46]=o("li",null,[o("p",null,"移动 Mirai 相关文件"),o("p",null,"将原先 MCL 中的插件（plugins）、数据（data）和配置（config）文件夹下相关文件移动至 Overflow 对应文件夹下。"),o("p",null,"由于登录将由 NapCat 负责，与登录相关的文件无需移动，例如：AutoLogin.yml、mirai-device-generator.jar、fix-protocol-version.jar 等。")],-1)),t[47]||(t[47]=o("li",null,[o("p",null,"都配置并移动好后，启动 NapCat 登录 Bot，再启动 Overflow，即可恢复 Mirai 插件的运行，替代原来 MCL + 签名服务的方式。")],-1))]),o("h2",O,[r(n,{href:"https://github.com/liyihao1110/ncatbot/",target:"_blank",rel:"noreferrer"},{default:l(()=>[...t[48]||(t[48]=[e("NcatBot",-1)])]),_:1}),t[49]||(t[49]=e()),t[50]||(t[50]=o("a",{class:"header-anchor",href:"#ncatbot","aria-label":'Permalink to "[NcatBot](https://github.com/liyihao1110/ncatbot/)"'},"​",-1))]),t[60]||(t[60]=o("p",null,"基于 NapCat 的 QQ 机器人 Python SDK，快速开发，轻松部署。",-1)),t[61]||(t[61]=o("p",null,"使用 Python 编程，对新手十分友好，对老手十分高效。",-1)),t[62]||(t[62]=o("p",null,"已完全对接 NapCat，提供一键安装并配置 NapCat 功能（Windows、Linux）",-1)),t[63]||(t[63]=o("p",null,[e("项目发布至 PyPI，可通过 "),o("code",null,"pip install ncatbot"),e(" 直接安装。")],-1)),o("p",null,[t[52]||(t[52]=e("请参考使用文档 ",-1)),r(n,{href:"https://docs.ncatbot.xyz/",target:"_blank",rel:"noreferrer"},{default:l(()=>[...t[51]||(t[51]=[e("NcatBotDocs",-1)])]),_:1})]),r(p)])}const y=d(v,[["render",h]]);export{L as __pageData,y as default};
